jQuery(document).ready(function ($) {
	

	// top language
	$('.language').each(function(e) {
		 // $(this).find('> .select').on('click', function (e) {
		//	 $(".language-list").toggle();
		//  });
		  
	  $(this).find('.option').on('click', function (e) {
		$('.language > .select').html($(this).html()).next().hide();
	  });
	});
	
	// top notic layer popup
	/*
	$("#notic-alarm").on("click", function() {
		$(".notic-info").fadeToggle("fast");
	});
	*/

	// top admin user info 
	/*
	$('.admin-user-toggle').click(function(){
		$(this).next('.admin-user-list').toggle();
	});
	*/

	$(document).click(function(e) {
		var target = e.target;
		if (!$(target).is('.admin-user-toggle') && !$(target).parents().is('.admin-user-toggle')) {
			$('.admin-user-list').hide();
		}
		// Button tag의 onclick 실행시 form submit 실행되어 오류 발생. 예외처리 추가 2020.04.06 my30.park
		if($(target).is('.sbtn') || $(target).is('.sbtn-line')){
			return false;
		}
		
		return;
	});
	// tag search		
	$('.tag-search-toggle').click(function(e) {
		e.preventDefault();
		e.stopPropagation();
		$(this).closest('.search-dropdown').toggleClass('open');
	});

	$('.tag-menu > li > a').click(function(e) {
		e.preventDefault();
		var clicked = $(this);
		clicked.closest('.tag-menu').find('.tag-menu-active').removeClass('tag-menu-active');
		clicked.parent('li').addClass('tag-menu-active');
		clicked.closest('.search-dropdown').find('.tag-active').html(clicked.html());
	});

	$(document).click(function() {
		$('.search-dropdown.open').removeClass('open');
	});
	
	
	// view list tab
	$('.tabs-stage > div').hide();
	$('.tabs-stage > div:first').show();
	$('.view-tabs-nav li:first').addClass('tab-active');

	// Change tab class and display content
	$('.view-tabs-nav a').on('click', function(event){
		event.preventDefault();
		$('.view-tabs-nav li').removeClass('tab-active');
		$(this).parent().addClass('tab-active');
		$('.tabs-stage > div').hide();
		$($(this).attr('href')).show();
	});
		
	// main tab
    $(".tab_content").hide();
    $(".tab_content:first").show();

    $("ul.main-tabs li").click(function() {
		$(".tab_content").hide();
		var activeTab = $(this).attr("rel"); 
		$("#"+activeTab).fadeIn();		

		$("ul.main-tabs li").removeClass("active");
		$(this).addClass("active");
	});

	$('ul.main-tabs li').last().addClass("tab_last");		
	
	//left tree menu
	$('.left-tree-item').click(function(e) {
		$(this).next().toggle(300);
		$(this).toggleClass('left-tree-item--opened');

		if ($(this).hasClass('left-tree-item--opened')) {
			$(this).children('.left-tree-icon').addClass('icomoon-tree-minus').removeClass('icomoon-tree-plus');
		} else {
			$(this).children('.left-tree-icon').addClass('icomoon-tree-plus').removeClass('icomoon-tree-minus');
		}
	});

	$('.left-tree-li').not(':has(ul)').find('.left-tree-item').click(function(e) {
		$('.left-tree li').find('.left-tree-item').not(this).removeClass('left-tree-item--active');
		$(this).toggleClass('left-tree-item--active');
	})	

	// goto top - 사용안함 2020.06.17 my30.park 
	/*$(window).scroll(function(event){
		var scroll = $(window).scrollTop();
		if (scroll >= 50) {
			$(".go-top").addClass("show");
		} else {
			$(".go-top").removeClass("show");
		}
	});
	*/

	$('.go-top').click(function(){
		//top 소스 수정. 2020.06.17 my30.park
		var top_y = 0;
		if($('#myAnchor')){
			top_y = $('#myAnchor').offset().top;
		}
		$('html, body').animate({
			scrollTop: top_y
		}, 1000);
	});	
	
	// upload-wrapper
    $(".upload-wrapper").on("change", ".file-upload-field", function(){ 
      $(this).parent(".file-upload").attr("data-text",         
      $(this).val().replace(/.*(\/|\\)/, '') );
    });
  
    renderSelectBox();

});

/* 
select box style 적용.
동적으로 select box를 추가할 경우에도 이 함수를 호출해야합니다.
*/
function renderSelectBox(){
	$('select').each(function(){
		var $this = $(this), numberOfOptions = $(this).children('option').length;
	  
		if($this.hasClass("sw-select-hidden") === false){
			$this.addClass('sw-select-hidden'); 
			$this.wrap('<div class="sw-select"></div>');
			$this.after('<div class="sw-select-styled"></div>');
			
			var $styledSelect = $this.next('div.sw-select-styled');
			
			//2020.03.27 selected 된 option 값으로 변경 my30.park
			$styledSelect.text($this.children('option:selected').text());
			
			var $list = $('<ul />', {
				'class': 'sw-select-options'
			}).insertAfter($styledSelect);
			
			for (var i = 0; i < numberOfOptions; i++) {
				$('<li />', {
					text: $this.children('option').eq(i).text(),
					rel: $this.children('option').eq(i).val()
				}).appendTo($list);
			}
			
			var $listItems = $list.children('li');
			
			$styledSelect.click(function(e) {
				e.stopPropagation();
				$('div.sw-select-styled.active').not(this).each(function(){
					$(this).removeClass('active').next('ul.sw-select-options').hide();
				});
				$(this).toggleClass('active').next('ul.sw-select-options').toggle();
			});
			
			$listItems.click(function(e) {
				//2020.03.30 change event 처리 코드 추가 my30.park
				var prev_val = $this.val();
				var new_val = $(this).attr('rel');
				
				e.stopPropagation();
				$styledSelect.text($(this).text()).removeClass('active');
				$this.val(new_val);
				$list.hide();
				
				if(prev_val != new_val){
					$this.change();
				}
			});
			
			$(document).click(function() {
				$styledSelect.removeClass('active');
				$list.hide();
			});
		}
		
		//2020.06.09 select value 설정시 처리 추가
		$this.change(function(e) {
			var $styledSelect = $this.next('div.sw-select-styled');
			$styledSelect.text($this.children('option:selected').text());
		});
		
	});
}

//2020.04.29 동적 Select 생성시 이벤트 처리 추가  my30.park
function addSelectViewListEvent(data, targetId, firstRow){
	//Select UI 표시되는 방식이 변경되어, 추가적인 데이터 처리가 필요해짐.
	//1.보여지는 리스트 코드 추가
	var $list =  $('#'+targetId).parent().find('.sw-select-options');
	var _html = '';
	if(firstRow != null && firstRow != '' && firstRow != 'undefined') _html += '<li rel="">'+firstRow+'</li>';
	for(var i=0; i<data.length; i++){
		_html += '<li rel="'+data[i].code+'" >'+data[i].codeNm+'</li>';
    }
	$list.html(_html); 
	
	//2.리스트에 이벤트 추가 
	var $listItems = $list.children('li');
	
	$listItems.click(function(e) {
		var $selectObj = $('#'+targetId);
		var prev_val = $selectObj.val();
		var new_val = $(this).attr('rel');

		e.stopPropagation();
		
		$selectObj.parent().find('div.sw-select-styled').text($(this).text()).removeClass('active');
		$selectObj.val(new_val);
		$list.hide();
		
		if(prev_val != new_val){
			$selectObj.change();
		}
	});
}

//layer 
function openLayer(IdName, tpos, lpos){
	var pop = document.getElementById(IdName);
		pop.style.display = "block";
		pop.style.top = tpos + "px";
		pop.style.left = lpos + "px";
}
//layer
function closeLayer(IdName){
	var pop = document.getElementById(IdName);
		pop.style.display = "none";
}

//SWEA 1.0에서 이전한 소스

//****************************************
//layerPop
//****************************************
$(function(){
//���̾� �˾�
 $('.open-pop').click(function(){
$('.layerPop').show();
 });
 //�ݱ� ��ư�� ������ ��
 $('.layerPop .close').click(function () {	    
$('.layerPop').hide();
 });
});

//Bootbox alert

function doAlert(msg, doFunc) {
	if (doFunc == null)
		doFunc = function(res){};
	bootbox.alert(msg,'','5',null, doFunc);
}

function doConfirm(msg, promptFnc) {
	if (promptFnc == null)
		promptFnc = function(res){};
	
	bootbox.confirm(msg,'Confirm', promptFnc);
		
}

function getParameter(param) {
    var returnValue;
    var url = location.href;
    var parameters = (url.slice(url.indexOf('?') + 1, url.length)).split('&');
    for (var i = 0; i < parameters.length; i++) {
        var varName = parameters[i].split('=')[0];
        if (varName.toUpperCase() == param.toUpperCase()) {
            returnValue = parameters[i].split('=')[1];
            return decodeURIComponent(returnValue);
        }
    }
}

function isMobile() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}

function setCookie(c_name,value,path,expiredays,expirehours)
{
  var exdate=new Date();
  if (expiredays != null) {
    exdate.setDate(exdate.getDate()+expiredays);
  }
  if (expirehours != null) {
    exdate.setHour(exdate.getHour() + expirehours);
  }
  document.cookie=c_name+ "=" +escape(value) +
    ((expiredays==null&&expirehours==null) ? "" : ";expires="+exdate.toGMTString()) +
    (path==null?"" : (";path=" + path + ";"));
}

function getCookie( name ) {  
	   var nameOfCookie = name + "=";  
	   var x = 0;  
	   while ( x <= document.cookie.length )  
	   {  
	       var y = (x+nameOfCookie.length);  
	       if ( document.cookie.substring( x, y ) == nameOfCookie ) {  
	           if ( (endOfCookie=document.cookie.indexOf( ";", y )) == -1 )  
	               endOfCookie = document.cookie.length;  
	           return unescape( document.cookie.substring( y, endOfCookie ) );  
	       }  
	       x = document.cookie.indexOf( " ", x ) + 1;  
	       if ( x == 0 )  
	           break;  
	   }  
	   return "";  
}

function decodeHTMLEntities(str) {
	var txt = document.createElement("textarea");
    txt.innerHTML = str;
    return txt.value;
}

//문자열의 최대길이 validation 체크
function checkTextByte(obj, maxByte){
	var msg = maxByte+'Byte 이하로 입력해 주십시오.';
	var str = obj.value;
	var strByte = 0;
	var strLen = 0;
	for (var i = 0; i < str.length; i++) {
		if (escape(str.charAt(i)).length > 4) {
			strByte += 2;
		} else {
			strByte++;
		}
		if (strByte <= maxByte) {
			strLen = i + 1;
		}
	}
	if (strByte > maxByte) {
		alert(msg);
		obj.value = str.substring(0, strLen);
		obj.focus();
	}
}

$(document).ready(function(){
	  
	  var tabWrapper = $('.pop-tab'),
	      tabMnu = tabWrapper.find('.tab-mnu li'),
	      tabContent = tabWrapper.find('.tab-cont > .tab-pane');
	  
	  tabContent.not(':first-child').hide();
	  
	  tabMnu.each(function(i){
	    $(this).attr('data-tab','tab'+i);
	  });
	  tabContent.each(function(i){
	    $(this).attr('data-tab','tab'+i);
	  });
	  
	  tabMnu.click(function(){
	    var tabData = $(this).data('tab');
	    tabWrapper.find(tabContent).hide();
	    tabWrapper.find(tabContent).filter('[data-tab='+tabData+']').show(); 
	  });
	  
	  $('.tab-mnu > li').click(function(){
	    var before = $('.tab-mnu li.active');
	    before.removeClass('active');
	    $(this).addClass('active');
	   });
	  
	});

$(document).ready(function() { 

	(function ($) { 
		//$('.check-tab ul.tabs').addClass('active').find('> li:eq(0)').addClass('current');
		
		$('.check-tab ul.tabs li .check-rbtn').click(function (g) { 
			var tab = $(this).closest('.check-tab'), 
				index = $(this).closest('li').index();
			
			tab.find('ul.tabs > li').removeClass('current');
			$(this).closest('li').addClass('current');
			
			tab.find('.check-tab-content').find('div.tabs_item').not('div.tabs_item:eq(' + index + ')').slideUp();
			tab.find('.check-tab-content').find('div.tabs_item:eq(' + index + ')').slideDown();
			
			g.preventDefault();
		} );
	})(jQuery);

});